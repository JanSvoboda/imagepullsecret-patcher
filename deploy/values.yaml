# Default values for imagepullsecret-patcher.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  registry: ""
  repository: svoboh/imagepullsecret-patcher
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

dockerSecrets:
  username: ""
  password: ""
  email: ""
  hostname: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: 
  limits:
    cpu: 200m
    memory: 30Mi
  requests:
    cpu: 10m
    memory: 15Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
  # - name: src-dockerconfigjson
  #   secret: 
  #     secretName: {{ include "secrets.secretName" . }}

# Volume mount to secret containing dockerconfigjson
volumeMounts: []
  # - name: src-dockerconfigjson
  #   mountPath: "/app/secrets"
  #   readOnly: true

# Check README to get full information about environments that can be setup
env:
  - name: CONFIG_FORCE
    value: "true"
  - name: CONFIG_DEBUG
    value: "false"
  - name: CONFIG_DOCKERCONFIGJSONPATH
    value: "/app/secrets/.dockerconfigjson"
  - name: CONFIG_EXCLUDED_NAMESPACES
    value: "kube-system,kube-node-lease,kube-public"
  - name: CONFIG_SECRETNAME
    value: "image-pull-secret"
nodeSelector: {}

tolerations: []

affinity: {}
